# # Maven

# # Build your Java project and run tests with Apache Maven.
# # Add steps that analyze code, save build artifacts, deploy, and more:
# # https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master


pool:
  name: Ubuntu
  agent: anjalis-rep-azure
# pool:
#  vmImage: Ubuntu # ubuntu-latest


steps:
# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     mavenOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.11'
#     jdkArchitectureOption: 'x64'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     goals: 'package'
- task: JFrogMaven@1
  inputs:
    mavenPomFile: 'maven-examples/maven-example/pom.xml'
    goals: 'clean deploy'
    artifactoryResolverService: 'rep-azure-anjali'
    targetResolveReleaseRepo: 'anjalis-libs-release'
    targetResolveSnapshotRepo: 'anjalis-libs-snapshot'
    artifactoryDeployService: 'rep-azure-anjali'
    targetDeployReleaseRepo: 'anjalis-libs-release-local'
    targetDeploySnapshotRepo: 'anjalis-libs-snapshot-local'
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    javaHomeOption: 'Path'
    jdkDirectory: '/usr/lib/jvm/zulu-7-amd64' #'/usr/lib/jvm/java-11-openjdk-amd64' #

# trigger:
# - master

# pool:
#   vmImage: ubuntu-latest

# steps:
# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     mavenOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.11'
#     jdkArchitectureOption: 'x64'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     goals: 'package'

# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
